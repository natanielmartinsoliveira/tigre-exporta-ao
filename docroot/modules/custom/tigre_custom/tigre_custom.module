<?php

use Drupal\tigre_custom\Rest\TigreRestService;
use Drupal\taxonomy\Entity\Term;
use Drupal\node\Entity\Node;

/**
 * Implements hook_preprocess_HOOK().
 */
function tigre_custom_preprocess_form_element(&$variables) {

  if ($variables['element']['#id'] == 'edit-name') {
    $variables['attributes']['class'][] = 'col-md-6';
    $variables['label']['#title'] = t('Name');
  }

  if ($variables['element']['#id'] == 'edit-mail') {
    $variables['attributes']['class'][] = 'col-md-6';
    $variables['label']['#title'] = t('E-mail');
  }

  if ($variables['element']['#id'] == 'edit-pass') {
    $variables['attributes']['class'][] = 'col-md-6';
  }

  if ($variables['element']['#id'] == 'edit-field-contato-profissao') {
    $variables['attributes']['class'][] = 'col-md-6';
  }

  if ($variables['element']['#id'] == 'edit-field-contato-empresa-0-value') {
    $variables['attributes']['class'][] = 'col-md-6';
  }


  if ($variables['element']['#id'] == 'edit-field-contato-celular-0-value') {
    $variables['attributes']['class'][] = 'col-md-6';
  }


  if ($variables['element']['#id'] == 'edit-field-contato-telefone-0-value') {
    $variables['attributes']['class'][] = 'col-md-3';
  }


  if ($variables['element']['#id'] == 'edit-field-contato-celular-0-value') {
    $variables['attributes']['class'][] = 'col-md-3';
  }

  if ($variables['element']['#id'] == 'edit-field-contato-pais') {
    $variables['attributes']['class'][] = 'col-md-6';
  }


  if ($variables['element']['#id'] == 'edit-message-0-value') {
    $variables['attributes']['class'][] = 'col-md-12';
  }

}
function tigre_custom_form_alter(&$form, \Drupal\Core\Form\FormStateInterface $form_state, $form_id)
{
    if ($form_id == 'contact_message_contato_form') {
   
      $form['actions']['submit']['#value'] = t('Enviar');
   
    }else if ($form_id == 'contact_message_newsletter_form') {
   
      $form['actions']['submit']['#value'] = t('Enviar');

    }
}

function tigre_custom_search_block_form_alter(&$form, FormStateInterface $form_state) {
  $form['keys']['#attributes']['placeholder'] = t('Digite aqui o produto ou categoria que busca');
}

function hook_taxonomy_menu_update(&$item) {
  if ($item['ptid'] !== '0') {
    return;
  }

  $menu_link = menu_link_load($item['mlid']);
  $item['weight'] = $menu_link['weight'];
}


function tigre_custom_preprocess_search_result(&$variables) {
  // Change the date displayed in search results
  // to be the created date, not the updated date.
  if($variables['result']['node']->getType() == 'produto')
    $variables['info_split']['image'] = $variables['result']['node']->get('field_uc_product_image_url')->getString();
}

/**
 * Implements hook_cronapi().
 */
function tigre_custom_cronapi() {
  $items = array();
  $items['_tigre_custom_import_produto'] = array();
  return $items;
}

/*function tigre_custom_cron() {
  tigre_list_products();
}*/

function tigre_list_products_finished() {

}

function tigre_custom_queue_import_produto_cronjob() {

  // $tids = \Drupal::entityQuery('taxonomy_term')
  //   ->condition('vid', 'produto')
  //   ->execute();

  // $controller = \Drupal::entityTypeManager()->getStorage('taxonomy_term');
  // $entities = $controller->loadMultiple($tids);
  // $controller->delete($entities);
  
  // $result = \Drupal::entityQuery('node')
  //     ->condition('type', 'produto')
  //     ->execute();
  // entity_delete_multiple('node', $result);

  /** @var QueueInterface $queue */
  $queue = \Drupal::queue('tigre_custom_queue_worker');

  /** @var TigreRestService $tigre_service */
  $tigre_service = new TigreRestService();
  $tigre_service->setHost("http://34.193.90.181");
  //$tigre_service->setHost("https://www.tigre.com.br");
  $tigre_service->setUsername("lucas");
  $tigre_service->setPassword('102030');
  $produtos = $tigre_service->getProductTaxonomies();

  foreach ($produtos as $nid => $produto) {
    $produto_language = $produto['pt-br'];
    $parent = $produto_language['parent'];
    if(!is_null($parent))
        $parent = (int) $parent;
    $data[] = array ( 'id' => $nid, 'parent_id' => $parent );
  }

  function cmp($a, $b) {    
  if ($a['parent_id'] == $b['parent_id']) {
      return 0;
  }
  return ($a['parent_id'] < $b['parent_id']) ? -1 : 1;
  }

  uasort($data, 'cmp');
  
  foreach ($data as $item) {
    $nid = (string) $item['id'];

    $produto = $produtos[$nid];
    $produto_language = $produto['pt-br'];
    $parent = $produto_language['parent'];
    if(!is_null($parent)){
      $detailParent = $tigre_service->getDetailTaxonomy($produtos[$parent]['pt-br']['url']);
      $taxonomyParent = \Drupal::service('entity.repository')->loadEntityByUuid('taxonomy_term', $detailParent['uuid']['0']['value']);
    }
    $detail = $tigre_service->getDetailTaxonomy($produto_language['url']);
    $current_taxonomy = \Drupal::service('entity.repository')->loadEntityByUuid('taxonomy_term', $detail['uuid']['0']['value']);

      if (empty($current_taxonomy)) {
        $taxonomy = Term::create([
          'vid' => 'produto',
        ]);
      }
      else {
        $taxonomy = Term::load($current_taxonomy->id());
      }

      if (!empty($detail['uc_catalog_image'])) {
        $imagem = file_get_contents($detail['uc_catalog_image'][0]['url']);
        $file = file_save_data($imagem, file_default_scheme().'://imagens/taxonomia/produto/'.basename($detail['uc_catalog_image'][0]['url']), FILE_EXISTS_REPLACE);
      }
      $taxonomy->set('uuid', $detail['uuid'][0]['value']);
      $taxonomy->set('name', $detail['name'][0]['value']);
      $taxonomy->set('weight', $detail['weight'][0]['value']);
      $taxonomy->set('description', array('format' => 'full_html', 'value' => $detail['description'][0]['value']) );
      
      if (!empty($detail['uc_catalog_image'])) {
        $taxonomy->set('field_cat_produto_image', [
          'target_id' => $file->id(),
        ]);
      }
      if(!is_null($parent)){
        $taxonomy->set('parent', $taxonomyParent->id());  
      }  
      $taxonomy->save();
      $taxonomias[$nid] = $taxonomy->id();
  }

  $produtos = $tigre_service->getProducts();

  foreach ($produtos as $nid => $produto) {

    $produto_language = $produto['pt-br'];
    $detail = $tigre_service->getDetailProduct($produto_language['url']);
    $detail['taxonomias'] = $taxonomias;
    $data['detail'] = $detail;
    $queue->createItem($data);
    
    // if (!isset($detail['uuid'][0]['value'])) {
    //   return null;
    // }
    // $current_product = \Drupal::service('entity.repository')->loadEntityByUuid('node', $detail['uuid']['0']['value']);
  
    // if (!empty($current_product)) {
    //   $node = Node::load($current_product->id());
    //   if (!empty($detail['taxonomy_catalog'])) {
    //     foreach ($detail['taxonomy_catalog'] as $term) {
    //       $taxId = (string) $term['target_id'];
    //       $node->field_taxonomy_catalog->appendItem(['target_id' => (int) $taxonomias[$taxId]]);
    //       //$node->set('field_taxonomy_catalog', ['target_id' => (int) $taxonomias[$taxId] ]);
    //     }
    //   }
    //   $node->save();
    // }
  }
}


function tigre_list_products() {
  /** @var TigreRestService $tigre_service */
  $tigre_service = new TigreRestService();
  $tigre_service->setHost("http://34.193.90.181");
  //$tigre_service->setHost("https://www.tigre.com.br");
  $tigre_service->setUsername("lucas");
  $tigre_service->setPassword('102030');
  $produtos = $tigre_service->getProducts();

  foreach ($produtos as $nid => $produto) {

    $produto_language = $produto['pt-br'];
    $detail = $tigre_service->getDetailProduct($produto_language['url']);


    //die();


  }

}