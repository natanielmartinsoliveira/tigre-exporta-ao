{#
/**
 * @file
 * Default theme implementation to display a menu.
 *
 * Available variables:
 * - menu_name: The machine name of the menu.
 * - items: A nested list of menu items. Each menu item contains:
 *   - attributes: HTML attributes for the menu item.
 *   - below: The menu item child items.
 *   - title: The menu link title.
 *   - url: The menu link url, instance of \Drupal\Core\Url
 *   - localized_options: Menu link localized options.
 *
 * @ingroup templates
 *
 * Define a custom macro that will render all menu trees.
 */
#}
{% macro menu_links(items, attributes, menu_level, classes) %}
  {% if items %}
    <ul{{ attributes.addClass(menu_level == 0 ? classes : 'dropdown-menu') }}>
    {% for item in items %}
      {%
        set item_classes = [
          item.is_expanded and item.below ? 'expanded',
          item.is_expanded and menu_level == 0 and item.below ? 'dropdown',
          item.in_active_trail ? 'active',
        ]
      %}
      {% if menu_level == 0 and item.is_expanded and item.below %}
        <li{{ item.attributes.addClass(item_classes) }}>
        <a href="{{ item.url }}" class="dropdown-toggle" data-toggle="dropdown"><i class="icon-export"></i> 
          <svg width="11px" height="7px" viewBox="0 0 11 7" version="1.1">
                <g stroke="none" stroke-width="1" fill="none" fill-rule="evenodd" stroke-linecap="square">
                <g transform="translate(-1354.000000, -14.000000)" stroke="#FFFFFF" stroke-width="2">
                <g transform="translate(0.000000, -4.000000)">
                <g>
                <g transform="translate(240.000000, 15.000000)">
                <g transform="translate(1000.000000, 0.000000)">
                <g transform="translate(116.000000, 5.000000)">
                <path d="M0.291666667,0.285714286 L3.51323016,3.44153159"></path>
                <path d="M6.83796296,0.285714286 L3.61639946,3.44153159"></path>
                </g>
                </g>
                </g>
                </g>
                </g>
                </g>
                </g>
                </svg>
        </a>
      {% else %}
        <li{{ item.attributes.addClass(item_classes) }}>
        <a href="{{ item.url }}">
        {% set menuUri %}{{ item.url }}{% endset %}
        {% if menuUri == 'https://www.tigre.com.br' %}
          <i class="icon-brasil"></i>
        {% elseif menuUri == 'http://www.tigre.com.ar' %}
          <i class="icon-argentina"></i>
        {% elseif menuUri == 'http://www.tigre.com.bo' %}
          <i class="icon-bolivia"></i>
        {% elseif menuUri == 'http://www.tigre.cl/' %}
          <i class="icon-chile"></i>
        {% elseif menuUri == 'http://www.tigre.com.co/' %}
          <i class="icon-colombia"></i>
        {% elseif menuUri == 'http://www.tigre.com.ec/' %}
          <i class="icon-equador"></i>
        {% elseif menuUri == 'http://www.tigre.com.py/' %}
          <i class="icon-paraguai"></i>
        {% elseif menuUri == 'http://www.tigre.pe/' %}
          <i class="icon-peru"></i>
        {% elseif menuUri == 'http://www.tigre.com.uy/' %}
          <i class="icon-uruguai"></i>
        {% elseif menuUri == 'http://www.tigreadsusa.com/' %}
          <i class="icon-tigreads"></i>
        {% endif %}
        {{ item.title }}</a>
      {% endif %}
      {% if item.below %}
        {{ _self.menu_links(item.below, attributes.removeClass(classes), menu_level + 1, classes) }}
      {% endif %}
      </li>
    {% endfor %}
    </ul>
  {% endif %}
{% endmacro %}

{#
  Invoke the custom macro defined above. If classes were provided, use them.
  This allows the template to be extended without having to also duplicate the
  code above. @see http://twig.sensiolabs.org/doc/tags/macro.html
#}
{{ _self.menu_links(items, attributes, 0, classes ? classes : ['menu', 'menu--' ~ menu_name|clean_class, 'nav']) }}
